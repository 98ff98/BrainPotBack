CREATE DATABASE `BRAINPOT`;
USE `BRAINPOT`;


CREATE TABLE `NODE` (
    `ID` INT NOT NULL,
    `OWNERTEAM` INT NOT NULL,
    `OWNERUSER` INT NOT NULL,
    `CONTENT` TEXT NOT NULL,
    `LOC_MODI` TEXT ,
    `TEXT_MODI` TEXT,
    FOREIGN KEY(`OWNERTEAM`) REFERENCES `TEAM`(`ID`) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (`ID`, `OWNERUSER`)
);

#튜플 조회
SELECT * FROM `NODE`;

#노드 추가 프로시저
DELIMITER @@;
CREATE PROCEDURE `ADD_NODE`(IN `NODE_ID` INT, IN `OWNER_TEAM` INT, IN `OWNER_USER` INT, IN `NODE_CONTENT` TEXT)
  BEGIN
    INSERT INTO `NODE`(`ID`,`OWNERTEAM`, `OWNERUSER`, `CONTENT`) VALUES (`NODE_ID`, `OWNER_TEAM`, `OWNER_USER`, `NODE_CONTENT`);
  END @@;
DELIMITER ;

#노드 위치 변경 프로시저
DELIMITER @@;
CREATE PROCEDURE `MODI_NODE_LOC`(IN `NODE_ID` INT, IN `OWNER_USER` INT, IN `UPDATE_TEXT` TEXT)
  BEGIN
    UPDATE `NODE` SET NODE.LOC_MODI = `UPDATE_TEXT` WHERE NODE.ID = `NODE_ID` AND NODE.OWNERUSER = `OWNER_USER`;
  END @@;
DELIMITER ;

#노드 내용 변경 프로시저
DELIMITER @@;
CREATE PROCEDURE `MODI_NODE_TEXT`(IN `NODE_ID` INT, IN `OWNER_USER` INT, IN `UPDATE_TEXT` TEXT)
  BEGIN
    UPDATE `NODE` SET NODE.TEXT_MODI = `UPDATE_TEXT` WHERE NODE.ID = `NODE_ID` AND NODE.OWNERUSER = `OWNER_USER`;
  END @@;
DELIMITER ;

#노드 삭제 프로시저
DELIMITER @@;
  CREATE PROCEDURE `DROP_NODE`(IN `NODE_ID` INT, IN `USER` INT)
    BEGIN
      DELETE FROM `NODE` WHERE `ID` = `NODE_ID` AND `OWNERUSER` = `USER`;
    END @@;
DELIMITER ;

#노드 조회 프로시저
DELIMITER @@;
CREATE PROCEDURE `VIEW_NODES`(IN `TEAM_ID` INT)
  BEGIN
    SELECT * FROM `NODE` WHERE `OWNERTEAM` = `TEAM_ID`;
  END @@;
DELIMITER ; 

#### DANGER!! ####
DELETE FROM `NODE`;
DROP TABLE `NODE`;