CREATE DATABASE `BRAINPOT`;
USE `BRAINPOT`;





CREATE TABLE `TEAM` (
    `ID` INT NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
    `OWNER` INT NOT NULL,
    `GOAL` VARCHAR(100),
    `STATUS` INT NOT NULL,
    `INVITECODE` CHAR(5) NOT NULL UNIQUE,
    `CREATEDTIME` INT NOT NULL,
    
    KEY `IDX_OWNER`(`OWNER`),
    KEY `IDX_INVITECODE`(`INVITECODE`)
);





# 테스트 데이터 입력
INSERT INTO `TEAM`(`OWNER`, `GOAL`, `STATUS`,`INVITECODE`, `CREATEDTIME`) VALUES (1, '저녁식사2', 0,'D22K2', UNIX_TIMESTAMP());





#데이터 검색
SELECT * FROM `TEAM`;





#실제 적용할 스토어드 프로시저
DELIMITER @@;

CREATE PROCEDURE `ADD_TEAM`(IN `OWNER` INT, IN `GOAL` VARCHAR(100), IN `INVITECODE` CHAR(5))

    BEGIN
        INSERT INTO `TEAM`(`OWNER`, `GOAL`, `STATUS`,`INVITECODE`, `CREATEDTIME`) VALUES (`OWNER`, `GOAL`, 0,`INVITECODE`, UNIX_TIMESTAMP());


    END @@;

DELIMITER ;




#스토어드 프로시저 호출
CALL `ADD_TEAM`(0, '저녁에 무엇을 먹어야 하는가', 'GASM2');





#3일 이상 된 팀들을 삭제하는 쿼리
DELETE FROM `TEAM` WHERE `CREATEDTIME` <= (UNIX_TIMESTAMP() - 259200);





#위 쿼리를 프로시저 화
DELIMITER @@;

CREATE PROCEDURE `CLEAR_OLD_TEAMS`()

    BEGIN
        DELETE FROM `TEAM` WHERE `CREATEDTIME` <= (UNIX_TIMESTAMP() - 259200);


    END @@;

DELIMITER ;

CALL `CLEAR_OLD_TEAMS`();





#주어진 문자열을 초대코드를 가지고 있는 팀이 있는지 여부 확인하기 위한 스토어드 프로시저
DELIMITER @@;

CREATE PROCEDURE `FIND_TEAM_BY_INVITECODE`(IN `CODE` CHAR(5))

    BEGIN
        SELECT `ID` FROM `TEAM` WHERE `INVITECODE` = `CODE`;
    END @@;

DELIMITER ;


#프로시저 호출
CALL `FIND_TEAM_BY_INVITECODE`('D22K2');










#### DANGER!! ####

DROP TABLE `TEAM`;